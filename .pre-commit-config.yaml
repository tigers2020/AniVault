# Pre-commit configuration for AniVault
# This file configures pre-commit hooks to run code quality checks before commits

repos:
  # Basic Python checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
        description: Remove trailing whitespace
      - id: end-of-file-fixer
        name: Fix End of Files
        description: Ensure files end with a newline
      - id: check-yaml
        name: Check YAML
        description: Check YAML syntax
      - id: check-json
        name: Check JSON
        description: Check JSON syntax
      - id: check-toml
        name: Check TOML
        description: Check TOML syntax
      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Check for merge conflict markers
      - id: check-added-large-files
        name: Check for large files
        description: Prevent large files from being committed
        args: ['--maxkb=1000']
      - id: check-case-conflict
        name: Check for case conflicts
        description: Check for case conflicts in filenames
      - id: debug-statements
        name: Check for debug statements
        description: Check for debugger imports and breakpoints
      - id: check-docstring-first
        name: Check docstring is first
        description: Check that docstrings appear before code

  # Python code formatting with Ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.8
    hooks:
      - id: ruff
        name: Ruff Linter
        description: Lint Python code with Ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format
        name: Ruff Formatter
        description: Format Python code with Ruff



  # Python type checking (temporarily disabled due to existing codebase type issues)
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.5.1
  #   hooks:
  #     - id: mypy
  #       name: MyPy Type Checker
  #       description: Type check Python code with MyPy
  #       additional_dependencies: [types-requests, types-PyYAML]
  #       args: ['--explicit-package-bases', '--ignore-missing-imports', '--no-strict-optional', '--allow-untyped-calls', '-p', 'anivault']
  #       pass_filenames: false
  #       always_run: true

  # Security checks (temporarily disabled due to dependency issues)
  # - repo: https://github.com/PyCQA/bandit
  #   rev: 1.7.5
  #   hooks:
  #     - id: bandit
  #       name: Bandit Security Checker
  #       description: Check for common security issues
  #       args: ['-r', 'src/', '-f', 'json', '-o', 'bandit-report.json']
  #       exclude: 'tests/'

  # Custom AniVault code quality checks (temporarily disabled)
  # - repo: local
  #   hooks:
  #     - id: validate-magic-values
  #       name: Validate Magic Values
  #       description: Check for hardcoded magic values
  #       entry: python scripts/validate_magic_values.py
  #       language: system
  #       files: \.py$
  #       args: ['--exclude', 'tests/', '--exclude', 'scripts/']
  #       pass_filenames: true
  #       always_run: false

  #     - id: validate-function-length
  #       name: Validate Function Length
  #       description: Check function length and complexity
  #       entry: python scripts/validate_function_length.py
  #       language: system
  #       files: \.py$
  #       args: ['--exclude', 'tests/', '--exclude', 'scripts/']
  #       pass_filenames: true
  #       always_run: false

  #     - id: validate-error-handling
  #       name: Validate Error Handling
  #       description: Check error handling patterns
  #       entry: python scripts/validate_error_handling.py
  #       language: system
  #       files: \.py$
  #       args: ['--exclude', 'tests/', '--exclude', 'scripts/']
  #       pass_filenames: true
  #       always_run: false

  #     - id: validate-code-quality
  #       name: Validate Code Quality
  #       description: Comprehensive code quality validation
  #       entry: python scripts/validate_code_quality.py
  #       language: system
  #       files: \.py$
  #       args: ['--exclude', 'tests/', '--exclude', 'scripts/']
  #       pass_filenames: true
  #       always_run: false

# Configuration
# default_stages: [commit]  # Temporarily disabled for dependency optimization commit
fail_fast: false
minimum_pre_commit_version: '2.0.0'

# Skip certain checks for specific file patterns
exclude: |
  (?x)^(
    \.git/.*|
    \.venv/.*|
    venv/.*|
    \.env/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    \.mypy_cache/.*|
    \.coverage.*|
    htmlcov/.*|
    \.tox/.*|
    dist/.*|
    build/.*|
    \.eggs/.*|
    \.DS_Store|
    Thumbs\.db
  )$
