"""create_initial_schema

Revision ID: 63b04737b492
Revises: 3ff80129897d
Create Date: 2025-09-19 08:31:23.678818

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '63b04737b492'
down_revision: Union[str, Sequence[str], None] = '3ff80129897d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create anime_metadata table
    op.create_table('anime_metadata',
    sa.Column('tmdb_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('original_title', sa.String(length=255), nullable=True),
    sa.Column('korean_title', sa.String(length=255), nullable=True),
    sa.Column('overview', sa.Text(), nullable=True),
    sa.Column('poster_path', sa.String(length=500), nullable=True),
    sa.Column('backdrop_path', sa.String(length=500), nullable=True),
    sa.Column('first_air_date', sa.DateTime(), nullable=True),
    sa.Column('last_air_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('vote_average', sa.Float(), nullable=True),
    sa.Column('vote_count', sa.Integer(), nullable=True),
    sa.Column('popularity', sa.Float(), nullable=True),
    sa.Column('number_of_seasons', sa.Integer(), nullable=True),
    sa.Column('number_of_episodes', sa.Integer(), nullable=True),
    sa.Column('genres', sa.Text(), nullable=True),
    sa.Column('networks', sa.Text(), nullable=True),
    sa.Column('raw_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('tmdb_id')
    )
    
    # Create indexes for anime_metadata table
    op.create_index('idx_anime_metadata_title', 'anime_metadata', ['title'], unique=False)
    op.create_index('idx_anime_metadata_korean_title', 'anime_metadata', ['korean_title'], unique=False)
    op.create_index('idx_anime_metadata_status', 'anime_metadata', ['status'], unique=False)
    op.create_index('idx_anime_metadata_vote_average', 'anime_metadata', ['vote_average'], unique=False)
    op.create_index('idx_anime_metadata_first_air_date', 'anime_metadata', ['first_air_date'], unique=False)
    
    # Create parsed_files table
    op.create_table('parsed_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_extension', sa.String(length=10), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('modified_at', sa.DateTime(), nullable=False),
    sa.Column('parsed_title', sa.String(length=255), nullable=False),
    sa.Column('season', sa.Integer(), nullable=True),
    sa.Column('episode', sa.Integer(), nullable=True),
    sa.Column('episode_title', sa.String(length=255), nullable=True),
    sa.Column('resolution', sa.String(length=20), nullable=True),
    sa.Column('resolution_width', sa.Integer(), nullable=True),
    sa.Column('resolution_height', sa.Integer(), nullable=True),
    sa.Column('video_codec', sa.String(length=50), nullable=True),
    sa.Column('audio_codec', sa.String(length=50), nullable=True),
    sa.Column('release_group', sa.String(length=100), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('processing_errors', sa.Text(), nullable=True),
    sa.Column('metadata_id', sa.Integer(), nullable=True),
    sa.Column('db_created_at', sa.DateTime(), nullable=False),
    sa.Column('db_updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['metadata_id'], ['anime_metadata.tmdb_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Create indexes for parsed_files table
    op.create_index('idx_parsed_files_file_path', 'parsed_files', ['file_path'], unique=True)
    op.create_index('idx_parsed_files_parsed_title', 'parsed_files', ['parsed_title'], unique=False)
    op.create_index('idx_parsed_files_season_episode', 'parsed_files', ['season', 'episode'], unique=False)
    op.create_index('idx_parsed_files_resolution', 'parsed_files', ['resolution'], unique=False)
    op.create_index('idx_parsed_files_release_group', 'parsed_files', ['release_group'], unique=False)
    op.create_index('idx_parsed_files_year', 'parsed_files', ['year'], unique=False)
    op.create_index('idx_parsed_files_is_processed', 'parsed_files', ['is_processed'], unique=False)
    op.create_index('idx_parsed_files_metadata_id', 'parsed_files', ['metadata_id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop indexes for parsed_files table
    op.drop_index('idx_parsed_files_metadata_id', table_name='parsed_files')
    op.drop_index('idx_parsed_files_is_processed', table_name='parsed_files')
    op.drop_index('idx_parsed_files_year', table_name='parsed_files')
    op.drop_index('idx_parsed_files_release_group', table_name='parsed_files')
    op.drop_index('idx_parsed_files_resolution', table_name='parsed_files')
    op.drop_index('idx_parsed_files_season_episode', table_name='parsed_files')
    op.drop_index('idx_parsed_files_parsed_title', table_name='parsed_files')
    op.drop_index('idx_parsed_files_file_path', table_name='parsed_files')
    
    # Drop indexes for anime_metadata table
    op.drop_index('idx_anime_metadata_first_air_date', table_name='anime_metadata')
    op.drop_index('idx_anime_metadata_vote_average', table_name='anime_metadata')
    op.drop_index('idx_anime_metadata_status', table_name='anime_metadata')
    op.drop_index('idx_anime_metadata_korean_title', table_name='anime_metadata')
    op.drop_index('idx_anime_metadata_title', table_name='anime_metadata')
    
    # Drop tables
    op.drop_table('parsed_files')
    op.drop_table('anime_metadata')
    
    # ### end Alembic commands ###
