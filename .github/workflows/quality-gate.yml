name: Code Quality Gate

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  quality-check:
    name: Quality Validation
    runs-on: windows-latest  # Windows primary target

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
        env:
          PYTHONIOENCODING: 'utf-8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black ruff isort mypy pytest pytest-cov pytest-mock pytest-benchmark bandit safety detect-secrets pre-commit

      - name: Run pre-commit hooks
        run: |
          python -m pre_commit run --all-files
        continue-on-error: true  # Don't fail initially

      - name: Validate magic values
        run: |
          python scripts/validate_magic_values.py src/anivault --format=json > magic_results.json
          python scripts/analyze_violations.py magic_results.json
        continue-on-error: true

      - name: Validate function length and complexity
        run: |
          python scripts/validate_function_length.py src/anivault --format=json > function_results.json
          python scripts/analyze_violations.py function_results.json
        continue-on-error: true

      - name: Validate error handling (HIGH severity only)
        run: |
          python scripts/validate_error_handling.py src/anivault --severity=high --format=json > error_results.json
          python scripts/analyze_violations.py error_results.json

      - name: Run unit tests
        run: |
          python -m pytest tests/ --ignore=tests/gui/ --ignore=tests/widgets/ --ignore=tests/controllers/ --ignore=tests/test_integration_main_window.py --cov=src/anivault --cov-report=term --cov-report=html --cov-fail-under=60 -v

      - name: Type checking with mypy
        run: |
          python -m mypy src/anivault --config-file=pyproject.toml
        continue-on-error: true

      - name: Security scan with bandit
        run: |
          python -m bandit -r src/anivault -f json -o bandit-report.json
          python -m bandit -r src/anivault -ll
        continue-on-error: false

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

      - name: Upload quality reports
        uses: actions/upload-artifact@v4
        with:
          name: quality-reports
          path: |
            magic_results.json
            function_results.json
            error_results.json
            bandit-report.json

  # Secondary job: cross-platform validation
  cross-platform-test:
    name: Cross-Platform Tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run tests
        run: |
          python -m pytest tests/ -v --tb=short
